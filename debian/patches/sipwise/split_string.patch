--- a/apps/dsm/mods/mod_utils/ModUtils.cpp
+++ b/apps/dsm/mods/mod_utils/ModUtils.cpp
@@ -54,6 +54,7 @@ MOD_ACTIONEXPORT_BEGIN(MOD_CLS_NAME) {
   DEF_CMD("utils.sub", SCUSSubAction);
   DEF_CMD("utils.int", SCUIntAction);
   DEF_CMD("utils.splitStringCR", SCUSplitStringAction);
+  DEF_CMD("utils.splitStringComma", SCUSplitStringAction);
   DEF_CMD("utils.escapeCRLF", SCUEscapeCRLFAction);
   DEF_CMD("utils.unescapeCRLF", SCUUnescapeCRLFAction);
   DEF_CMD("utils.playRingTone", SCUPlayRingToneAction);
@@ -382,6 +383,31 @@ EXEC_ACTION_START(SCUSplitStringAction)
     if (p==string::npos) {
       if (last_p < str.length())
 	sc_sess->var[dst_array+"["+int2str((unsigned int)cntr)+"]"] = str.substr(last_p);
+      break;
+    }
+    
+    sc_sess->var[dst_array+"["+int2str((unsigned int)cntr++)+"]"] = str.substr(last_p, p-last_p);
+
+    last_p = p+1;    
+  }
+} EXEC_ACTION_END;
+
+CONST_ACTION_2P(SCUSplitStringAction, ',', true);
+EXEC_ACTION_START(SCUSplitStringAction) {
+  size_t cntr = 0;
+  string str = resolveVars(par1, sess, sc_sess, event_params);
+  string dst_array = par2;
+  if (!dst_array.length())
+    dst_array = par1;
+  if (dst_array.length() && dst_array[0]=='$')
+    dst_array = dst_array.substr(1);
+  
+  size_t p = 0, last_p = 0;
+  while (true) {
+    p = str.find(",", last_p);
+    if (p==string::npos) {
+      if (last_p < str.length())
+	sc_sess->var[dst_array+"["+int2str((unsigned int)cntr)+"]"] = str.substr(last_p);
       break;
     }
     
